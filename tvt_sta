#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct 20 07:19:08 2017

@author: kerhnewek
"""
import numpy as np
import statistics as stats
import matplotlib.pyplot as plt
import os as os 

plt.close('all')

def STdata(g):
    
    data=os.listdir()
    nueva=[]
    print('     Name '.ljust(10),'Surface Tension /mN/m'.ljust(20),'    Uncernainty'.ljust(10))
    for i in data:
        if '.tvt' in i:
            nueva.append(i)
    d=sorted(nueva)
    for i in d:
        f=open(i,"r").readlines()
        for j in range(0,23):
            f.pop(0)
            f.pop(-1)
        TS=[]
        for line in f:
            j=line[10:16]
            TS.append(float(j))

  
#    Chauvenet's criterion.
        c=2.57
        prom=round(stats.mean(TS),2)
        desv=np.sqrt(stats.variance(TS))
        TS2=[]
        for k in TS:
            if -c<(k-prom)/desv<c:
                TS2.append(k)
        prom=round(stats.mean(TS2),2)
        var=stats.variance(TS2)
        u=round(np.sqrt(var/len(TS2)),2)
        index=[i for i in range(0,len(TS2))]
        print(i,'            %1.3f              %1.3f'   % (prom,u ))
        #Graphs
        if g==True:
            plt.figure(i)
            plt.plot(index,TS2,'bo')
            #plt.title(r'$Temperature control$',fontsize=14,fontweight='bold')
            plt.xlabel(r'$n$')
            plt.ylabel(r'$\sigma /mNm^{-1}$')
            plt.annotate(r'$\sigma= {0} \pm {1} mN/m$ '.format(prom,u),
                         xy=(1, 0), xycoords='axes fraction',
                         xytext=(0, 380), textcoords='offset pixels',
                         horizontalalignment='right',           
                         verticalalignment='bottom')
            plt.grid(True)
            plt.show
        else:
            None
STpoint=[]
uSTpoint=[]


def ST1(g):
    data=os.listdir()
    nueva=[]
    print('     Name '.ljust(10),'Surface Tension /mN/m'.ljust(20),'    Uncernainty'.ljust(10))
    for i in data:
        if '.txt' in i:
            nueva.append(i)
    d=sorted(nueva)
    for i in d:
        f=open(i,"r").readlines()
        for j in range(0,23):
            f.pop(0)
            f.pop(-1)
        TS=[]
        for line in f:
            j=line[10:16]
            TS.append(float(j))

  
#    Chauvenet's criterion.
        c=2.57
        prom=round(stats.mean(TS),2)
        desv=np.sqrt(stats.variance(TS))
        TS2=[]
        for k in TS:
            if -c<(k-prom)/desv<c:
                TS2.append(k)
        prom=round(stats.mean(TS2),2)
        var=stats.variance(TS2)
        u=round(np.sqrt(var/len(TS2)),2)
        index=[i for i in range(0,len(TS2))]
        print(i,'            %1.3f              %1.3f'   % (prom,u ))
        STpoint.append(prom)
        uSTpoint.append(u)
        #Graphs
        if g==True:
            plt.figure(i)
            plt.plot(index,TS2,'bo')
            #plt.title(r'$Temperature control$',fontsize=14,fontweight='bold')
            plt.xlabel(r'$n$')
            plt.ylabel(r'$\sigma /mNm^{-1}$')
            plt.annotate(r'$\sigma= {0} \pm {1} mN/m$ '.format(prom,u),
                         xy=(1, 0), xycoords='axes fraction',
                         xytext=(0, 380), textcoords='offset pixels',
                         horizontalalignment='right',           
                         verticalalignment='bottom')
            plt.grid(True)
            plt.show
        else:
            None
        
def DST(): return STpoint, uSTpoint
